# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'oc_logReader.ui'
#
# Created by: PyQt5 UI code generator 5.13.2
#
# WARNING! All changes made in this file will be lost!


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(802, 509)
        MainWindow.setAcceptDrops(True)
        MainWindow.setToolTipDuration(-1)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.splitter = QtWidgets.QSplitter(self.centralwidget)
        self.splitter.setOrientation(QtCore.Qt.Vertical)
        self.splitter.setObjectName("splitter")
        self.oc_treeWidget = QtWidgets.QTreeWidget(self.splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.oc_treeWidget.sizePolicy().hasHeightForWidth())
        self.oc_treeWidget.setSizePolicy(sizePolicy)
        self.oc_treeWidget.setAcceptDrops(True)
        self.oc_treeWidget.setAutoFillBackground(False)
        self.oc_treeWidget.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.oc_treeWidget.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.oc_treeWidget.setAlternatingRowColors(True)
        self.oc_treeWidget.setAnimated(False)
        self.oc_treeWidget.setAllColumnsShowFocus(False)
        self.oc_treeWidget.setHeaderHidden(False)
        self.oc_treeWidget.setExpandsOnDoubleClick(True)
        self.oc_treeWidget.setObjectName("oc_treeWidget")
        self.midSectionframe = QtWidgets.QFrame(self.splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.midSectionframe.sizePolicy().hasHeightForWidth())
        self.midSectionframe.setSizePolicy(sizePolicy)
        self.midSectionframe.setMinimumSize(QtCore.QSize(0, 25))
        self.midSectionframe.setMaximumSize(QtCore.QSize(16777215, 25))
        self.midSectionframe.setWhatsThis("")
        self.midSectionframe.setAutoFillBackground(False)
        self.midSectionframe.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.midSectionframe.setFrameShadow(QtWidgets.QFrame.Plain)
        self.midSectionframe.setLineWidth(1)
        self.midSectionframe.setObjectName("midSectionframe")
        self.lvl_textEdit = QtWidgets.QTextEdit(self.midSectionframe)
        self.lvl_textEdit.setGeometry(QtCore.QRect(40, 2, 31, 21))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(2)
        sizePolicy.setHeightForWidth(self.lvl_textEdit.sizePolicy().hasHeightForWidth())
        self.lvl_textEdit.setSizePolicy(sizePolicy)
        self.lvl_textEdit.setMaximumSize(QtCore.QSize(16777215, 24))
        self.lvl_textEdit.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.lvl_textEdit.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.lvl_textEdit.setReadOnly(True)
        self.lvl_textEdit.setObjectName("lvl_textEdit")
        self.level_label = QtWidgets.QLabel(self.midSectionframe)
        self.level_label.setGeometry(QtCore.QRect(4, 2, 41, 21))
        self.level_label.setObjectName("level_label")
        self.entry_label = QtWidgets.QLabel(self.midSectionframe)
        self.entry_label.setGeometry(QtCore.QRect(90, 2, 41, 21))
        self.entry_label.setObjectName("entry_label")
        self.entry_textEdit = QtWidgets.QTextEdit(self.midSectionframe)
        self.entry_textEdit.setGeometry(QtCore.QRect(130, 2, 121, 21))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(2)
        sizePolicy.setHeightForWidth(self.entry_textEdit.sizePolicy().hasHeightForWidth())
        self.entry_textEdit.setSizePolicy(sizePolicy)
        self.entry_textEdit.setMaximumSize(QtCore.QSize(16777215, 24))
        self.entry_textEdit.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.entry_textEdit.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.entry_textEdit.setReadOnly(True)
        self.entry_textEdit.setObjectName("entry_textEdit")
        self.dateTimeEdit = QtWidgets.QDateTimeEdit(self.midSectionframe)
        self.dateTimeEdit.setGeometry(QtCore.QRect(310, 2, 141, 21))
        self.dateTimeEdit.setWrapping(False)
        self.dateTimeEdit.setFrame(True)
        self.dateTimeEdit.setReadOnly(True)
        self.dateTimeEdit.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.dateTimeEdit.setAccelerated(False)
        self.dateTimeEdit.setKeyboardTracking(False)
        self.dateTimeEdit.setObjectName("dateTimeEdit")
        self.time_label = QtWidgets.QLabel(self.midSectionframe)
        self.time_label.setGeometry(QtCore.QRect(270, 0, 41, 21))
        self.time_label.setObjectName("time_label")
        self.item_textEdit = QtWidgets.QTextEdit(self.splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.item_textEdit.sizePolicy().hasHeightForWidth())
        self.item_textEdit.setSizePolicy(sizePolicy)
        self.item_textEdit.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.item_textEdit.setLineWidth(1)
        self.item_textEdit.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.item_textEdit.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.item_textEdit.setReadOnly(True)
        self.item_textEdit.setObjectName("item_textEdit")
        self.gridLayout.addWidget(self.splitter, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 802, 21))
        self.menubar.setObjectName("menubar")
        self.menuMenu = QtWidgets.QMenu(self.menubar)
        self.menuMenu.setObjectName("menuMenu")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setAutoFillBackground(False)
        self.statusbar.setStyleSheet("border-top-color: rgb(49, 49, 49);\n"
"gridline-color: rgb(17, 17, 17);\n"
"border-style: outset;")
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionFile = QtWidgets.QAction(MainWindow)
        self.actionFile.setObjectName("actionFile")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionSyntex_Highlighting = QtWidgets.QAction(MainWindow)
        self.actionSyntex_Highlighting.setCheckable(True)
        self.actionSyntex_Highlighting.setChecked(True)
        self.actionSyntex_Highlighting.setObjectName("actionSyntex_Highlighting")
        self.menuMenu.addAction(self.actionFile)
        self.menuMenu.addAction(self.actionExit)
        self.menuMenu.addAction(self.actionSyntex_Highlighting)
        self.menubar.addAction(self.menuMenu.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Owncloud Log Viewer - Testing Builds"))
        self.oc_treeWidget.setSortingEnabled(True)
        self.oc_treeWidget.headerItem().setText(0, _translate("MainWindow", "Entry"))
        self.oc_treeWidget.headerItem().setText(1, _translate("MainWindow", "Time"))
        self.oc_treeWidget.headerItem().setText(2, _translate("MainWindow", "Level"))
        self.oc_treeWidget.headerItem().setText(3, _translate("MainWindow", "IPv4"))
        self.oc_treeWidget.headerItem().setText(4, _translate("MainWindow", "User"))
        self.oc_treeWidget.headerItem().setText(5, _translate("MainWindow", "App"))
        self.oc_treeWidget.headerItem().setText(6, _translate("MainWindow", "Method"))
        self.oc_treeWidget.headerItem().setText(7, _translate("MainWindow", "Message"))
        self.level_label.setText(_translate("MainWindow", "Level"))
        self.entry_label.setText(_translate("MainWindow", "Entry"))
        self.time_label.setText(_translate("MainWindow", "Time"))
        self.menuMenu.setTitle(_translate("MainWindow", "Menu"))
        self.actionFile.setText(_translate("MainWindow", "Open"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionSyntex_Highlighting.setText(_translate("MainWindow", "Syn. Highlight"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
